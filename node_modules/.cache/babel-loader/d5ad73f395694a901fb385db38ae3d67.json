{"ast":null,"code":"var _jsxFileName = \"/Users/Jimmy/Desktop/react_project/nd0191-c1-myreads/starter/src/bookSearch.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport * as BooksAPI from \"./BooksAPI.js\";\nimport * as Book from \"./Book.js\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookSearch = ({\n  books,\n  onUpdateBook\n}) => {\n  _s();\n\n  const [resBooks, setResBooks] = useState([]);\n  const [query, setQuery] = useState(\"\");\n\n  const updateQuery = query => {\n    setQuery(query.trim());\n  };\n\n  useEffect(query => {\n    const getBooks = async () => {\n      const res = await BooksAPI.search(String(query));\n      res.error !== 'empty query' ? compareBooks(res, books) : setResBooks(res);\n    };\n\n    getBooks();\n  }, []);\n\n  const compareBooks = (resBooks, books) => {\n    const map = new Map();\n    books.map(book => map.set(book.id, book));\n    resBooks.map(book => {\n      if (map.has(book.id)) {\n        book.shelf = map(book.id).shelf;\n      } else {\n        book.shelf = 'none';\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by title, author, or ISBN\",\n          value: query,\n          onClick: updateQuery\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-results\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"books-grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-result\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        classNanme: \"books-grid\",\n        children: [resBooks.map(book => {\n          /*#__PURE__*/\n          _jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Book, {\n              book: book,\n              onUpdateBook: onUpdateBook\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 36\n          }, this);\n        }), \";\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BookSearch, \"8dtwe9l7zygT8gUJt9KWPHdYhvU=\");\n\n_c = BookSearch;\nexport default BookSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookSearch\");","map":{"version":3,"sources":["/Users/Jimmy/Desktop/react_project/nd0191-c1-myreads/starter/src/bookSearch.js"],"names":["useEffect","useState","BooksAPI","Book","Link","BookSearch","books","onUpdateBook","resBooks","setResBooks","query","setQuery","updateQuery","trim","getBooks","res","search","String","error","compareBooks","map","Map","book","set","id","has","shelf"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport * as BooksAPI from \"./BooksAPI.js\";\nimport * as Book from \"./Book.js\";\nimport { Link } from \"react-router-dom\";\nconst BookSearch = ({books, onUpdateBook}) => {\n    \n\n    const [resBooks, setResBooks] = useState([])\n\n    const [query, setQuery] = useState(\"\")\n\n    \n    const updateQuery = (query) => {\n        setQuery(query.trim());\n      };\n\n   \n    useEffect((query)=>{\n\n        const getBooks = async ()=>{\n            const res = await BooksAPI.search(String(query));\n\n            res.error !== 'empty query'?\n\n            compareBooks(res,books):\n            setResBooks(res);\n\n        };\n\n        getBooks(); \n\n    },[]);\n\n    const compareBooks = (resBooks,books) =>{\n        \n        const map = new Map();\n\n        books.map((book)=>map.set(book.id, book));\n\n        resBooks.map((book)=>{\n            if (map.has(book.id)){\n                book.shelf = map(book.id).shelf\n            }\n            else{\n                book.shelf = 'none'\n            }\n        })\n\n       \n    };\n\n    \n    return(\n    \n    <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n            <Link\n            to=\"/\"\n            >\n            Close\n            </Link>\n            <div className=\"search-books-input-wrapper\">\n            <input\n                type=\"text\"\n                placeholder=\"Search by title, author, or ISBN\"\n                value = {query}\n                onClick={updateQuery}\n          \n            />\n            </div>\n        </div>\n        <div className=\"search-books-results\">\n            <ol className=\"books-grid\"></ol>\n        </div>\n\n        <div className=\"search-books-result\">\n            <ol classNanme=\"books-grid\">\n            {resBooks.map((book)=>{<li>\n                        <Book book={book} onUpdateBook={onUpdateBook}>\n\n                        </Book>\n                        </li>})};\n                \n                       \n            </ol>\n        </div>\n    </div>\n    );\n    };\n\nexport default BookSearch;"]},"metadata":{},"sourceType":"module"}