{"ast":null,"code":"var _jsxFileName = \"/Users/Jimmy/Desktop/react_project/nd0191-c1-myreads/starter/src/BookSearch.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport * as BooksAPI from \"./BooksAPI.js\";\nimport Book from \"./Book.js\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookSearch = ({\n  books,\n  onUpdateBook\n}) => {\n  _s();\n\n  const [resBooks, setResBooks] = useState([]);\n  const [query, setQuery] = useState(\"\");\n\n  const updateQuery = query => {\n    setQuery(query);\n  };\n\n  useEffect(() => {\n    const getBooks = async () => {\n      const res = await BooksAPI.search(String(query));\n      res.error !== 'empty query' ? AddShelfInfo(res, books) : setResBooks();\n    };\n\n    query !== '' ? getBooks() : setResBooks();\n  });\n\n  const AddShelfInfo = (bookSearch, bookOnShelf) => {\n    const ShelfBookMap = BooksMap(bookOnShelf);\n    let BookSearchFinalArray = [];\n    bookSearch.map(Book => {\n      ShelfBookMap.has(Book.id) ? void 0 : Book.shelf = 'none';\n      BookSearchFinalArray.push(Book);\n    });\n    setResBooks(BookSearchFinalArray);\n  };\n\n  const BooksMap = books => {\n    const bookmap = new Map();\n    books.map(book => bookmap.set(book.id, book));\n    return bookmap;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        className: \"close-search\",\n        to: \"/\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"book-data\",\n          placeholder: \"Search by title, author, or ISBN\",\n          value: query,\n          onChange: e => updateQuery(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-results\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"books-grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      className: \"books-grid\",\n      children: resBooks ? resBooks.map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Book, {\n          book: book,\n          onUpdateBook: onUpdateBook\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)\n      }, book.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No Books found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BookSearch, \"8dtwe9l7zygT8gUJt9KWPHdYhvU=\");\n\n_c = BookSearch;\nexport default BookSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookSearch\");","map":{"version":3,"sources":["/Users/Jimmy/Desktop/react_project/nd0191-c1-myreads/starter/src/BookSearch.js"],"names":["React","useEffect","useState","BooksAPI","Book","Link","BookSearch","books","onUpdateBook","resBooks","setResBooks","query","setQuery","updateQuery","getBooks","res","search","String","error","AddShelfInfo","bookSearch","bookOnShelf","ShelfBookMap","BooksMap","BookSearchFinalArray","map","has","id","shelf","push","bookmap","Map","book","set","e","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport * as BooksAPI from \"./BooksAPI.js\";\nimport Book from \"./Book.js\";\nimport { Link } from \"react-router-dom\";\n\nconst BookSearch = ({books, onUpdateBook}) => {\n    \n\n    const [resBooks, setResBooks] = useState([]);\n\n    const [query, setQuery] = useState(\"\");\n\n    \n\n    \n    const updateQuery = (query) => {\n        setQuery(query);\n        \n      };\n\n      useEffect(() => {\n       \n          const getBooks = async () => {\n            const res = await BooksAPI.search(String(query));\n            res.error !== 'empty query'\n              ? AddShelfInfo(res,books)\n              : setResBooks();\n          };\n    \n          query !== '' ? getBooks() : setResBooks();\n        \n        \n      });\n     \n\n    const AddShelfInfo=(bookSearch,bookOnShelf)=>{\n\n        const ShelfBookMap = BooksMap(bookOnShelf);\n\n        let BookSearchFinalArray = [];\n\n        bookSearch.map((Book) => {\n          ShelfBookMap.has(Book.id)\n            ? void 0\n            : (Book.shelf = 'none');\n            BookSearchFinalArray.push(Book);\n        });\n        setResBooks(BookSearchFinalArray);\n      };\n\n\n\n    \n\n    const BooksMap =(books)=>{\n\n        const bookmap = new Map();\n       \n\n        books.map((book)=>bookmap.set(book.id,book))\n        \n\n        return bookmap;\n\n    }\n\n        \n       \n   \n\n    \n  return (\n    <div className=\"search-books\">\n      <div className=\"search-books-bar\">\n        <Link className=\"close-search\" to=\"/\">\n          Close\n        </Link>\n        <div className=\"search-books-input-wrapper\">\n          <input\n            type=\"text\"\n            name=\"book-data\"\n            placeholder=\"Search by title, author, or ISBN\"\n            value={query}\n            onChange={(e) => updateQuery(e.target.value)}\n          />\n        </div>\n      </div>\n      <div className=\"search-books-results\">\n        <ol className=\"books-grid\"></ol>\n      </div>\n      <ol className=\"books-grid\">\n        {resBooks ? (\n          resBooks.map((book) => (\n            <li key={book.id}>\n              <Book\n                key={book.id}\n                book={book}\n                onUpdateBook={onUpdateBook}\n              ></Book>\n            </li>\n          ))\n        ) : (\n          <div>\n            <p>No Books found</p>\n          </div>\n        )}\n      </ol>\n    </div>\n  );\n};\n\nexport default BookSearch;\n"]},"metadata":{},"sourceType":"module"}